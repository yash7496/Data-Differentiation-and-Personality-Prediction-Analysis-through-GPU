<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ8NDQ0NFREWFhURFRMY
        HSggGBoxGxUVITEhMSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg4NDRUPEBorHRUdLTctLS0rKy0rLS03
        Ny0tLTctLSsrKy0tNzcrLS0rLS0tLS0tLSsrLSsrKzcrKysrKyv/wAARCACuASIDASIAAhEBAxEB/8QA
        GgAAAwEBAQEAAAAAAAAAAAAAAgMEAQAFBv/EAB0QAQEBAQADAQEBAAAAAAAAAAABAgMREhMEYRT/xAAa
        AQEBAQEBAQEAAAAAAAAAAAABAgADBAYF/8QAIREBAAIDAQEBAAIDAAAAAAAAAAESAhETAwQUMVEFIUH/
        2gAMAwEAAhEDEQA/APkJByOkF4fUw+TmXRzfDfBTtjfDmyEbY2RsgvDDYfDZBeGyFOw+G+BSN8MNg8N8
        C8N8EbB4bILw3wzbD4dIOZFMUbYvwzwfnjRzgLQqMMpTeHeFk4fwU4fwXhXHJD4b6Vd8W/IXhUeEoPnW
        /Or/AJMvMXVwQelD6rrzBrmYyE+Mwj8M8Kdcy9ZMS5TjMFeGDsZYRsLBWMYgsBYbYCxlRJfhw/DmVtnh
        vhsgpEpmQ+G+BeHeCNskbIKRsjDYfApGyCmSnYfDfBmeZmeI3BjGZI8NmVWeBmeInOFx45SknOjnFbni
        ZOKZ9HXH50U4CnBdOQ5yR0dY+eEM4DnFbOTZzT0dI8IhJnkOclU5tnNN3SPNL82/NV83egsqiX5s9FNw
        G5bbVT+gblTcg1lW06TayC5U3INZVtM4pdZK3lXrJWsKiXDPHaLefAFW+ZOsOsS8mWMxJYbB2O8FOwWB
        8GeGeGOy/Vw/VwOw+G+GyN8JG2SNkHnFp2OAtoxjM/wRIPPOqscDs8Uz6Q64+Ez/ACkzxOxxVZ5G55Jn
        0d8fniE2eJmeSnPIzPNznN3jyS55GZ5KZzMnNM5ukeaachzmpmBzmic3SME05inNTObfQWVVPMO+amc3
        fMWNU/o30P8AR3o1m0nuWeqj0DcGw0nuA3Cm4DcqiU6TXINZVXALgxkmcUtyC4V3mG81WTOKLWQXC68g
        Xkq6ZwQawXrm9G8g3ibuc+O3l64F3jXq3iG8j1cp+V5fwrvjXp/INweqfyw8z5Vz0fm5uifzvNzztPx+
        dTjifjkjL1X5/N/afHE/HJRnkbnm5T6PXj46T55G55H55mTmic3aPMjPMzPM+YMzzTOa4wT55mZ5n55m
        TCbqonnMU5qJhvoLGpMwKZNmG+osalzLvU31b6tZtE+rfU70d6tZtEervU/0b82sKp/Rlwp+bvmbtVLc
        BvNb8nfJrtRDeTPkuvJ3ybo1Hn3ky8XoXmG4boaILxDeS7WC9ZMZtSEV5gvNXrJWsqjJE4wmuStZU6hW
        oqJc8oT6helGslXC4lyygjw430cqyKmZ5nZ5m5wbnDyTm9mPmVnBkwOZMmU2dKl5wZnA5kcy1joMyPOR
        Zg5E7OgzApkcyOZGzoHqL1MmRTIsak+rfU6ZFObWapEy2ZUTkKcxc0TejfRXObfmOhol+Tfkr+bfRNzR
        LOTfkp9XerXNYT/OMuD7A2NuW0RchuTrAaiokTBOoXYfrILlcSiYT6hdim4DearDSPWS9YX3iH4npApL
        z7zBeT0/gz4js3J5d4B+D1LyBecHYcXm/D+Oej8o5u0txhLnJmctmTM5crOkYhmRTIpkcybHQJkcyKZH
        MtttBmR5g5kcw1mqGZMmRZwZnCJyXGJecjmDpgcwic1VKnMU5mzIplM5qqCYFMD8OFjpnq71F4b4G2B6
        s9TPDvB2NFeGWG+rvU2bRFgblR6s9FXFU1yG4VejPRriqX5s+Sv0d6t0NEnyb8lPgNiZzk0T/IN5n0Gh
        aTom5L1DtQvUO20RouqNZL9FWhGifDTPRzXgVlLMmTLZByOfRdAyDmRZyZMno1AZwZnA5kzOUz6qjzDn
        BmcDkHImfRXMOcGTLhRN1VdIKRzRZqtkb4dBSNZtMkd4HI2RrtUHhvqPw2RujVBMu9TPDvAu1AervUbG
        s1Q+rLkbK1jUHhngfgNjWaoLAU3wG5N2qXYCw6wPgdGoTYGw6wFT1NCbA3J1BodTQm5Dcm0FTPqeYPVw
        mjo1EMHkEo8o6q5m5MheTJR0NDMjheRymMzUyDgIPKugoKCkZBwdWo6Qcjo2DoaOkFI6Na7Va1jWsNNc
        5vg2aro50jRdqs8O8CYOhozwywTKLtUIaK1jXNQ0NbaG1rtVlDRWhtTOZqHQKLVBam5qGl0VoLROZqyg
        rdAtTc1c5nlw6NRFKZmkSm5rj0daG5pkpM0OaHQ0PlMlImh50erUPlMlImhyjseZ8o5SZoU0Y9ROB0o4
        TNDlVHomhgoXK2VXQUMjYCabNHo1BxoPZ3s12oZ5d5L9nezXapnlnkHsz2a8NQzyG0Hsz2HSDQdobQ3Q
        bpPWDzF5DaC6DdDtB5itDaG6BdJn2MeYrQWsug3SJ9lc3UFrLoF0jq1G2gtZdBuh0agnF+zWu1EM0ZNJ
        psU2JdNKpRzSWbHNjZqqzoyaSTY89EzlJqrmjJpHOg50RZVVc0OaRzoOdGvLUVzQptJOgp0bq3NXNi90
        c6N+h7Dms+jfoj+rPq3cc1v0Z9Ef1Zew/SeS36u+iH7BvdE/ZEf9PJf9XfRB93fdH7cf7biu+jL0R/Z3
        1P6dnkrvQP0S/Vl6DuY81N2z3TXoy9G6nmouwXZF6gvU3lqKLsN2mvUF7GJlqQp1sGuibXYrXf8ArpGO
        UpnGFd6AvRHruXr9DrHjlKZ0u+jnm/6P650/Pkm0Bzsc6Is7MnR6Z8UxksnQU6IpsX0c58VxktnQc6IZ
        0FOjnPjK4mF06CnVD9WzqjjKtrp1HOrz50F9Uz4qiXoTqL6vO+gvo5z4yuNPQnYX1efOgp0csvGVRpd9
        XfVD9W/VznxyVGMK71Beqe9Aa283p5ZLxwhT9WfVHelD9Hn5ukeS36/1n2Se4L1PNUeS/wCwp1ednoL6
        vT4/NllP+kZ4xj/L0Pqy9nn3tQa7V+jh8My82XpjD0b3L1+h52u1BeterD/HuGXvD0L+kF/S869KG9Hp
        x+HFyn3X6/UDX6UF2G7dY+TGHOfaVt/QC9kf0b9HThjCekyovSg10JvQrp2XGEJnI/3rkX+j+OXWE2f/
        2Q==
</value>
  </data>
</root>